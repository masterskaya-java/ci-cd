name: Timetable CI/CD Pipelene

on:
  workflow_call:
    inputs:
      sonar-token:
        required: true
        type: string
      sonar-url:
        required: true
        type: string

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      # Клонирование репозитория внутрь VM GitHub Actions и checkout нужной ветки
      - name: Repository checkout
        uses: actions/checkout@v4
      
      # Кеширование (для последующих сборок) Maven зависимостей
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      
      # Установка JDK 21 для компиляции и запуска приложения в следующих шагах, а также использования mvn 
      - name: Java setup
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
      
      # Проверка кода на соответствие google-java-format
      - name: Google Java Format validation
        run: mvn spotless:check
      
      # Проверка кода на соответствие правилам Checkstyle
      - name: Checkstyle validation
        run: mvn checkstyle:check
      
      # Сборка проекта и запуск unit тестов
      - name: Build and run tests
        run: mvn clean verify --no-transfer-progress
      
      # Вывод переменных сонара для проверки
      - name: Debug SONAR vars
        run: |
          echo "SONAR_HOST_URL=${{ inputs.sonar-url }}"
          echo "SONAR_TOKEN=${{ inputs.sonar-token }}"

      # Проверка кода SonarQube
      - name: SonarQube scan
        run: mvn sonar:sonar \
          -Dsonar.projectKey=YNDXT \
          -Dsonar.host.url=${{ inputs.sonar-url }} \
          -Dsonar.login=${{ inputs.sonar-token }}
